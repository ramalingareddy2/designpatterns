Intercepting Filter
------------------
Problem:
There are several different types of request that comes to an web application. For each request we want to perform different types of operations, so to handle the request we need to write RequestHandler which are responsible for perform request specific operations.
For many of the request that are received we can directly dispatch the request to RequestHandler. But few request we want to modify the request/response before it is being dispatched to the Target
  For e.g..
    - we want to apply auditing
    - want to implement compression etc

We want to apply some pre/post processing logic for the request/response that is send by the clients. These pre/post processing logic can be categorized to 2 types
  1. want to execute a series check, to ensure the request is qualified for processing
    1.1 Request being sent is authenticated or not
    1.2 The client is access from an trusted ip address
    1.3 The client is using supported browser or not
    1.4 Is the character set encoding is supported or not
    1.5 does the client has valid session or not
These above checks result in true/false based on which we want to handle request by applying the Target logic
  2. The second type of pre/post processing logic we want to apply for all the requests is modifying the request/response before it is processed or after processing before the response is dispatched.
    2.1 uncompress the request data before it is dispatched to the target. Once the target finished execution take the response returned by the target and compress and dispatch to the client.
    2.2 encryption and decryption

How can we address the above problem?
We can directly write such pre-post processing logic inside the Target itself, this is the simplest form of handling the Problem.

class AppointmentServlet extends HttpServlet {
  public void service(HttpServletRequest request, HttpServletResponse response) {
    String browser = null;
    String charSet = null;

    if(request.getUserPrinciple() != null) {
      browser = request.getHeader("User-Agent");
      if(browser.contains("firefox")) {
        charSet = request.getHeader("Char-Set");
        if(charSet.equals("utf-8")) {
          uncompress the request
          // booking appointment for a patient (business logic)
          compress it
        }else {
          response.sendRedirect("/error.jsp");
        }
      }else {
        response.sendRedirect("/error.jsp");
      }
    }else {
      response.sendRedirect("/error.jsp");
    }
  }
}

There are lot of problems in the above approach.
1. the business logic that we want to apply for the request became cluttered and difficult to understand.
2. Modifying the code or maintaining the code is going to be very difficult
3. The pre-checks or pre/post processing logic we have here, should be implemented for several targets of our application, which makes the code duplicated.

To address the above problem we can use Intercepting Filters. We can having these filter configured to be applied for specific targets.







































.
